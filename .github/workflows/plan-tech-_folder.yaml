name: Tech - Folder

on:
  pull_request:
    branches:
      - master
    paths:
      - 'terragrunt/live/tech/_folder/**'
      - 'terragrunt/modules/**'
      - '.github/workflows/plan-tech-_folder.yaml'
      - 'terragrunt/live/terragrunt.hcl'

defaults:
  run:
    shell: bash
#concurrency_workflows
concurrency: folder_environment,apply_environment
permissions:
  id-token: 'write'
  contents: 'write'
  pull-requests: 'write' 
jobs:
  get-folders-matrix:
    name: Prepare folders matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.list_dirs.outputs.matrix}}
    steps:
      - uses: actions/checkout@v3
      - id: list_dirs
        run: echo "::set-output name=matrix::$(find terragrunt/live/tech/_folder -name "*.tf" -exec dirname {} \; | jq -cnR '[inputs | select(length>0)]')"

  build:
    name: Terraform ${{ matrix.environment }}
    needs: [get-folders-matrix]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(needs.get-folders-matrix.outputs.matrix) }}
    env:
      TG_OPTIONS: "--terragrunt-non-interactive -no-color --init"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Setup auth
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/271855529211/locations/global/workloadIdentityPools/terraform/providers/github-provider'
          id_token_audience: 'https://iam.googleapis.com/projects/271855529211/locations/global/workloadIdentityPools/terraform/providers/github-provider'
          service_account: 'terraform-1@gloot-automation.iam.gserviceaccount.com'

      # Configure docker to use the gcloud command-line tool as a credential helper
      - uses: 'docker/login-action@v1'
        with:
          registry: 'eu.gcr.io' # or REGION-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Plan infrastructure
        working-directory: ${{ matrix.environment }}
        run: |
          docker run --rm \
            -e TF_IN_AUTOMATION=true \
            -e GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_APPLICATION_CREDENTIALS" \
            -v "$GOOGLE_APPLICATION_CREDENTIALS":"$GOOGLE_APPLICATION_CREDENTIALS" \
            -v "$HOME"/.config/gcloud:/root/.config/gcloud \
            -v "$GITHUB_WORKSPACE":/apps \
            eu.gcr.io/docker-registry-shared-cc74/infra-terragrunt-docker:latest "$(pwd)" run-all plan ${{ env.TG_OPTIONS }} | tee "$GITHUB_WORKSPACE"/output.txt

      - name: Check for changes
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          # Only keep changes
          sed -n '/Terraform will perform the following actions:$/,/^Plan: [0-9]* to add, [0-9]* to change, [0-9]* to destroy.$/{//!p};' "$GITHUB_WORKSPACE"/output.txt | sed -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' > changes.txt
          # Check if changes.txt is empty
          if [ -s changes.txt ]; then
            # Add header and start code block
            sed -i '1s|^|## Terraform changes for ${{ matrix.environment }}\n\n```terraform\n|' changes.txt
            # Append end of code block, and small warning
            printf "\`\`\`\n\n**Note:** This is a beta feature. Always check the logs!" >> changes.txt
            echo "terraformHasChanges=true" >> "$GITHUB_ENV"
          fi

      - name: Check changes comment limit
        if: github.event_name == 'pull_request' && env.terraformHasChanges == 'true'
        run: |
          CHARS=$(wc -m < changes.txt)
          echo "Chars in changes.txt: $CHARS"
          if [[ $CHARS -gt 65536 ]]; then
            printf "## Terraform changes for ${{ matrix.environment }} environment\n\n**Changes were too large to comment, please check the logs!**" > changes.txt
          fi

      - name: Comment pull request
        if: github.event_name == 'pull_request' && env.terraformHasChanges == 'true'
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: /home/runner/work/infra-terragrunt/infra-terragrunt/changes.txt
