on:
  pull_request:
      paths:
      - 'terragrunt/live/tech/dev/gnog/kubernetes/services/**'
      - 'terragrunt/live/tech/prod/gnog/kubernetes/services/**'
      - 'terragrunt/live/tech/playground/**'
      - 'terragrunt/live/tech/shared/**'
      - 'terragrunt/live/tech/_folder/**'
      - 'terragrunt/modules/**'
env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
jobs:
  strategy_type:
    name: Infracost-strategy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      m_files: ${{ steps.changed-files.outputs.modified_files }}
      a_files: ${{ steps.changed-files.outputs.added_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          dir_names: true
          files_ignore: |
            .github/workflows/
            terragrunt/live/terragrunt.hcl
          files_ignore_separator: "\n"

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.modified_files }}; do
            echo "$file "
          done
      - name: List all added files
        run: |
          for file in ${{ steps.changed-files.outputs.added_files }}; do
            echo "$file "
          done
  infracost_modified:
    name: Infracost-modify
    needs: strategy_type
    runs-on: ubuntu-latest
    if: ${{ needs.strategy_type.outputs.m_files != ''}}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          dir_names: true
          files_ignore: .github/workflows/

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.modified_files }}; do
            echo "$file "
          done
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      - name: Generate Infracost cost estimate baseline
        run: |
          for file in ${{ steps.changed-files.outputs.modified_files }}; do
            echo "$file "
            name=$(sed 's#.*/##' <<< "$file")
            infracost breakdown --path=$file \
                    --format=json \
                    --out-file=/tmp/infracost-base-$name.json
          done


      # Checkout the current PR branch so we can create a diff.
      - name: Checkout PR branch
        uses: actions/checkout@v3

      # Generate an Infracost diff and save it to a JSON file.
      - name: Generate Infracost diff
        run: |
          for file in ${{ steps.changed-files.outputs.modified_files }}; do
          echo "$file "
          name=$(sed 's#.*/##' <<< "$file")

          infracost diff --path=$file \
                          --format=json \
                          --compare-to=/tmp/infracost-base-$name.json \
                          --out-file=/tmp/infracost-$name.json
          done
      # Posts a comment to the PR using the 'update' behavior.
      # This creates a single comment and updates it. The "quietest" option.
      # The other valid behaviors are:
      #   delete-and-new - Delete previous comments and create a new one.
      #   hide-and-new - Minimize previous comments and create a new one.
      #   new - Create a new cost estimate comment on every push.
      # See https://www.infracost.io/docs/features/cli_commands/#comment-on-pull-requests for other options.
      - name: Post Infracost comment
        run: |
          for file in ${{ steps.changed-files.outputs.modified_files }}; do
          echo "$file "
          name=$(sed 's#.*/##' <<< "$file")
          infracost comment github --path=/tmp/infracost-$name.json \
                                    --repo=$GITHUB_REPOSITORY \
                                    --github-token=${{ secrets.GITHUB_TOKEN }} \
                                    --pull-request=${{github.event.pull_request.number}} \
                                    --behavior=new
          done
      - name: Generate Slack message
        id: infracost-slack
        run: |
          infracost output --path "/tmp/infracost-*.json" --format json --out-file /tmp/infracost.json
          echo "::set-output name=slack-message::$(infracost output --path=/tmp/infracost.json --format=slack-message --show-skipped)"
          echo "::set-output name=diffTotalMonthlyCost::$(jq '(.diffTotalMonthlyCost // 0) | tonumber' /tmp/infracost.json)"

       #Send Slack notification
      - name: Send cost estimate to Slack
        uses: slackapi/slack-github-action@v1.23.0
        if: ${{ steps.infracost-slack.outputs.diffTotalMonthlyCost > 0 }} # Only post to Slack if there is a cost diff
        with:
          payload: ${{ steps.infracost-slack.outputs.slack-message }}
          channel-id: 'C01JSQN9Y4C'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_INFRA }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  infracost_added:
    name: Infracost-add
    needs: strategy_type
    runs-on: ubuntu-latest
    if: ${{ needs.strategy_type.outputs.a_files != ''}}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          dir_names: true
          files_ignore: .github/workflows/

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.added_files }}; do
            echo "$file "
          done
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.ref }}'

      - name: Generate Infracost cost estimate baseline
        run: |
          for file in ${{ steps.changed-files.outputs.added_files }}; do
            echo "$file "
            name=$(sed 's#.*/##' <<< "$file")
            infracost breakdown --path=$file \
                    --format=json \
                    --out-file=/tmp/infracost-$name.json
          done
      - name: Post Infracost comment
        run: |
          for file in ${{ steps.changed-files.outputs.added_files }}; do
          echo "$file "
          name=$(sed 's#.*/##' <<< "$file")
          infracost comment github --path=/tmp/infracost-$name.json \
                                    --repo=$GITHUB_REPOSITORY \
                                    --github-token=${{ secrets.GITHUB_TOKEN }} \
                                    --pull-request=${{github.event.pull_request.number}} \
                                    --behavior=new
          done
      - name: Generate Slack message
        id: infracost-slack
        run: |
          infracost output --path "/tmp/infracost-*.json" --format json --out-file /tmp/infracost.json
          echo "::set-output name=slack-message::$(infracost output --path=/tmp/infracost.json --format=slack-message --show-skipped)"
          echo "::set-output name=diffTotalMonthlyCost::$(jq '(.diffTotalMonthlyCost // 0) | tonumber' /tmp/infracost.json)"

       #Send Slack notification
      - name: Send cost estimate to Slack
        uses: slackapi/slack-github-action@v1.23.0
        if: ${{ steps.infracost-slack.outputs.diffTotalMonthlyCost > 0 }} # Only post to Slack if there is a cost diff
        with:
          payload: ${{ steps.infracost-slack.outputs.slack-message }}
          channel-id: 'C01JSQN9Y4C'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_INFRA }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
